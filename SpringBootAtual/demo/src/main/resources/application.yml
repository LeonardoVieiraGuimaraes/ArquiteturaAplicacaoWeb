
###############################################################
# application.yml - Configuração centralizada do Spring Boot
# Este arquivo reúne todas as configurações da aplicação Spring Boot
# Inclui banco de dados, segurança, cache, Swagger, Actuator, logging e Keycloak
###############################################################

spring:
  application:
    name: demo # Nome da aplicação

  # Removido 'security.enabled' pois não existe essa propriedade no Spring Boot

  datasource: # Configuração do banco de dados
    url: jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # H2 em memória para dev/teste
    driver-class-name: org.h2.Driver # Driver JDBC do H2
    username: sa # Usuário padrão do H2
    password: # Sem senha para ambiente de desenvolvimento

  jpa:
    hibernate:
      ddl-auto: update # Atualiza o schema automaticamente a cada execução
    show-sql: true # Exibe SQL gerado no console
    properties:
      hibernate:
        format_sql: true # Formata o SQL para facilitar leitura

  cache:
    type: caffeine # Usa Caffeine para cache de alta performance

###############################################################
# Configuração do servidor
###############################################################
server:
  port: 8080 # Porta padrão da aplicação

###############################################################
# Configuração do Springdoc OpenAPI (Swagger)
# Gera documentação automática dos endpoints REST
###############################################################
springdoc:
  api-docs:
    path: /v3/api-docs # Endpoint para JSON da documentação
  swagger-ui:
    path: /swagger-ui.html # Interface web para testar endpoints

###############################################################
# Monitoramento e endpoints do Actuator
# Permite monitorar saúde, métricas e status da aplicação
###############################################################
management:
  endpoints:
    web:
      exposure:
        include: '*' # Expõe todos os endpoints do Actuator
  endpoint:
    health:
      show-details: always # Mostra detalhes de saúde
  prometheus:
    metrics:
      export:
        enabled: true # Exporta métricas para Prometheus (moderno)

###############################################################
# Configuração de logging
# Define o nível de log para cada pacote
###############################################################
logging:
  level:
    root: INFO # Nível padrão para toda a aplicação
  org.springframework.web: DEBUG # Debug detalhado para requisições web

###############################################################
# Exemplo de configuração para Keycloak
# Integração com servidor de autenticação Keycloak
###############################################################
keycloak:
  realm: demo # Nome do realm configurado no Keycloak
  auth-server-url: http://localhost:8081 # URL do servidor Keycloak
  resource: demo-app # Nome do client registrado no Keycloak
  public-client: true # Indica que o client é público (sem segredo)
  bearer-only: true # Apenas autenticação via token (sem login via navegador)
