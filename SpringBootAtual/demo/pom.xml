<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>24</java.version>
	</properties>
	<dependencies>
		<!--
			jjwt
			Biblioteca para geração e validação de tokens JWT (JSON Web Token).
			Usada para autenticação stateless.
		-->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<!--
			keycloak-spring-boot-starter
			Integração com Keycloak para autenticação, autorização e IAM.
			Suporte a OAuth2, OpenID Connect, SSO.
		-->
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
			<version>24.0.1</version>
		</dependency>
		<!--
			micrometer-registry-prometheus
			Exporta métricas da aplicação para Prometheus.
		-->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!--
			spring-boot-admin-starter-server
			Interface web para monitorar múltiplas aplicações Spring Boot.
			Visualização de logs, beans, status, etc.
		-->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-server</artifactId>
			<version>3.2.2</version>
		</dependency>
		<!--
			rest-assured
			Facilita testes automatizados de APIs REST.
			Permite validar respostas HTTP de forma simples.
		-->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>5.4.0</version>
			<scope>test</scope>
		</dependency>
		<!--
			spring-boot-starter-cache
			Adiciona suporte a cache na aplicação para melhorar performance.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<!--
			caffeine
			Implementação de cache de alta performance para uso com Spring Cache.
		-->
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<!--
			spring-boot-starter-actuator
			Permite monitorar e obter métricas da aplicação via endpoints como /actuator/health.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--
			spring-boot-starter-data-jpa
			Abstração para persistência em bancos de dados relacionais usando JPA.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--
			spring-boot-starter-security
			Implementa autenticação e autorização na aplicação.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!--
			spring-boot-starter-validation
			Permite validar dados recebidos em requisições usando anotações (@NotNull, @Email, etc).
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!--
			spring-boot-starter-web
			Estrutura para criar APIs REST e aplicações web (inclui Tomcat, Jackson, etc).
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--
			flyway-core
			Gerencia versionamento e migração do banco de dados.
		-->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<!--
			spring-boot-devtools
			Facilita o desenvolvimento com hot reload e reinicialização automática (não usar em produção).
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<!--
			h2
			Banco de dados em memória, útil para testes e desenvolvimento local.
		-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!--
			lombok
			Reduz o código repetitivo no Java com anotações como @Getter, @Setter, @Builder.
		-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!--
			spring-boot-starter-test
			Inclui JUnit, Mockito e outras ferramentas para testes unitários e de integração.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
			spring-boot-testcontainers
			Permite executar testes usando containers Docker (bancos, serviços externos).
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
			spring-security-test
			Ferramentas para testar autenticação e autorização em ambientes de teste.
		-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
			junit-jupiter (Testcontainers)
			Suporte ao JUnit 5 para testes automatizados, integração com Testcontainers.
		-->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
			springdoc-openapi-starter-webmvc-ui
			Gera documentação automática da API REST (Swagger UI).
			Permite visualizar e testar endpoints via interface web em /swagger-ui.html.
		-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.2.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
